@use 'sass:math';
@use '../abstracts/variables';

/** Find invert color **/
@function find-color-invert($color) {
  @if luminance($color) > 0.55 {
    @return variables.$black;
  }

  @else {
    @return variables.$white;
  }
}

/** Get luminance value of a color **/
@function luminance($color) {
  $colors: (
    'red': red($color),
    'green': green($color),
    'blue': blue($color),
  );

  @each $name, $value in $colors {
    $adjusted: 0;
    $value: math.div($value, 255);

    /* stylelint-disable-next-line number-max-precision */
    @if $value < 0.03928 {
      $value: $value / 12.92;
    }

    @else {
      $value: math.div($value + 0.055, 1.055);
      $value: pow($value, 2.4);
    }

    $colors: map-merge($colors, ($name: $value));
  }

  @return (map-get($colors, 'red') * 0.2126) + (map-get($colors, 'green') * 0.7152) +
    (map-get($colors, 'blue') * 0.0722);
}

/** Number to pow **/
@function pow($number, $exponent) {
  $value: 1;

  @if $exponent > 0 {
    @for $i from 1 through ceil($exponent) {
      $value: $value * $number;
    }
  }

  @return $value;
}
